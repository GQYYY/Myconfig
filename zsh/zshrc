# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
  export ZSH="/home/gqy/.oh-my-zsh"

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# ZSH_THEME="af-magic"
#ZSH_THEME="kardan"
 ZSH_THEME="agnoster"

# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  autojump
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
# 一些比较好用的命令别名
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias grep="grep --color=auto"
alias cl='clear'

#针对vim的一些简便设置
alias -s html='vim' #命令行直接输入后缀为html的文件名，会在vim中直接打开
alias -s rb='vim' #命令行直接输入后缀为ruby的文件名，会在vim中直接打开
alias -s py='vim' #命令行直接输入后缀为py的文件名，会在vim中直接打开
alias -s js='vim' #命令行直接输入后缀为js的文件名，会在vim中直接打开
alias -s c='vim' #命令行直接输入后缀为c的文件名，会在vim中直接打开
alias -s cpp='vim' #命令行直接输入后缀为cpp的文件名，会在vim中直接打开
alias -s java='vim' #命令行直接输入后缀为java的文件名，会在vim中直接打开
alias -s txt='vim' #命令行直接输入后缀为的txt文件名，会在vim中直接打开
# alias -s sh='vim' #命令行直接输入后缀为的sh文件名，会在vim中直接打开
# alias -s zsh='vim' #命令行直接输入后缀为的zsh文件名，会在vim中直接打开
# alias -s conf='vim' #命令行直接输入后缀为的conf文件名，会在vim中直接打开

#针对解压文件的一些简便设置
alias -s gz='tar -zxf' #命令行直接输入后缀为gz的文件名，会自动解压
alias -s tgz='tar -zxf' #命令行直接输入后缀为tgz的文件名，会自动解压
alias -s zip='unzip' #命令行直接输入后缀为zip的文件名，会自动解压
alias -s bz2='tar -jxf' #命令行直接输入后缀为bz2的文件名，会自动解压

eval $(thefuck --alias)

##自定义,默认在shell中启用powerline
if [ -f `which powerline-daemon` ]; then
    powerline-daemon -q
    POWERLINE_BASH_CONTINUATION=1
    POWERLINE_BASH_SELECT=1
    . /usr/local/lib/python2.7/dist-packages/powerline/bindings/zsh/powerline.zsh
fi

# export LC_ALL=en_US.UTF-8
# export LANG=en_US.UTF-8

# export AFL_PATH=/home/gqy/AFL/afl
# export PATH=$PATH:$AFL_PATH
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
